# Default values for client.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: [REDACTED]/beera-frontend
  tag: latest
  pullPolicy: Always
  pullSecret: beera
nameOverride: ""
fullnameOverride: ""



serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # certmanager.k8s.io/acme-challenge-type:  http01
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: beeraclient.demo.[REDACTED].io
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: client
            port:
              number: 3000
  tls: 
   - secretName: chart-example-tls
     hosts:
       - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

client:
 "NEXT_PUBLIC_BEERA_API_URL": https://beeraapi.demo.[REDACTED].io
 "NEXT_PUBLIC_BEERA_API_WS_URL": wss://beeraapi.demo.[REDACTED].io