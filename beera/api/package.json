{
  "name": "beera-backend",
  "version": "1.0.0",
  "description": "Beera is a TODO list application, the backend of which is built using moleculerjs",
  "scripts": {
    "build": "babel src -d dist --ignore \"**/*.test.js\" --copy-files",
    "build:docker": "docker build -t beera-backend .",
    "dev:watch": "nodemon --watch services --exec npm run dev",
    "dev": "npx babel-node --extensions .js -- ./node_modules/moleculer/bin/moleculer-runner --repl --hot src/**/*.service.js",
    "start": "moleculer-runner",
    "cli": "moleculer connect NATS",
    "ci": "jest --watch",
    "test": "jest --coverage",
    "lint": "eslint services",
    "dc:up": "docker-compose up --build -d",
    "dc:logs": "docker-compose logs -f",
    "dc:down": "docker-compose down"
  },
  "keywords": [
    "microservices",
    "moleculer"
  ],
  "author": "",
  "devDependencies": {
    "@babel/cli": "^7.13.10",
    "@babel/core": "^7.13.10",
    "@babel/node": "^7.13.10",
    "@babel/plugin-transform-runtime": "^7.13.10",
    "@babel/preset-env": "^7.13.10",
    "babel-jest": "^26.6.3",
    "babel-plugin-add-module-exports": "^1.0.4",
    "babel-plugin-inline-dotenv": "^1.6.0",
    "dotenv": "^8.2.0",
    "eslint": "^7.7.0",
    "jest": "^26.4.2",
    "jest-cli": "^26.4.2",
    "moleculer-repl": "^0.6.4",
    "nodemon": "^2.0.7",
    "regenerator-runtime": "^0.13.7"
  },
  "dependencies": {
    "@babel/runtime": "^7.13.10",
    "axios": "^0.21.1",
    "dayjs": "^1.10.4",
    "graphql": "^15.0.0",
    "ioredis": "^4.24.5",
    "moleculer": "^0.14.0",
    "moleculer-apollo-server": "^0.3.3",
    "moleculer-db": "^0.8.12",
    "moleculer-db-adapter-sequelize": "^0.2.10",
    "moleculer-decorators": "^1.3.0",
    "moleculer-io": "^1.1.3",
    "moleculer-web": "^0.9.0",
    "pg": "^8.3.3",
    "pg-hstore": "^2.3.3",
    "sequelize": "^5.22.4"
  },
  "engines": {
    "node": ">= 10.x.x"
  },
  "jest": {
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "rootDir": "./services",
    "roots": [
      "../test"
    ]
  }
}
